#############################################################################
# Makefile for building: iyf
# Generated by qmake (2.01a) (Qt 4.6.1) on: Wed May 5 19:43:11 2010
# Project:  client.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_CORE_LIB -DQT_THREAD_SUPPORT
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"f:\Qt\2010.01\qt\include\QtCore" -I"f:\Qt\2010.01\qt\include" -I"..\lib" -I"..\model" -I"f:\Qt\2010.01\qt\include\ActiveQt" -I"release" -I"f:\Qt\2010.01\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -Wl,-subsystem,console -mthreads -Wl
LIBS        =        -L"f:\Qt\2010.01\qt\lib" -lQtCore4 
QMAKE         = f:\qt\2010.01\qt\bin\qmake.exe
IDC           = f:\Qt\2010.01\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = main.cpp \
		..\model\SqliteModel.cpp \
		..\model\sqlite3.c 
OBJECTS       = release/main.o \
		release/SqliteModel.o \
		release/sqlite3.o
DIST          = 
QMAKE_TARGET  = iyf
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = iyf.exe
DESTDIR_TARGET = release\iyf.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec f:\Qt\2010.01\qt\mkspecs\win32-g++ -win32 -o Makefile.Release client.pro

dist:
	$(ZIP) iyf.zip $(SOURCES) $(DIST) client.pro f:\Qt\2010.01\qt\mkspecs\qconfig.pri f:\Qt\2010.01\qt\mkspecs\features\qt_functions.prf f:\Qt\2010.01\qt\mkspecs\features\qt_config.prf f:\Qt\2010.01\qt\mkspecs\features\exclusive_builds.prf f:\Qt\2010.01\qt\mkspecs\features\default_pre.prf f:\Qt\2010.01\qt\mkspecs\features\win32\default_pre.prf f:\Qt\2010.01\qt\mkspecs\features\release.prf f:\Qt\2010.01\qt\mkspecs\features\debug_and_release.prf f:\Qt\2010.01\qt\mkspecs\features\default_post.prf f:\Qt\2010.01\qt\mkspecs\features\win32\default_post.prf f:\Qt\2010.01\qt\mkspecs\features\build_pass.prf f:\Qt\2010.01\qt\mkspecs\features\win32\console.prf f:\Qt\2010.01\qt\mkspecs\features\win32\rtti.prf f:\Qt\2010.01\qt\mkspecs\features\win32\exceptions.prf f:\Qt\2010.01\qt\mkspecs\features\win32\stl.prf f:\Qt\2010.01\qt\mkspecs\features\shared.prf f:\Qt\2010.01\qt\mkspecs\features\warn_on.prf f:\Qt\2010.01\qt\mkspecs\features\qt.prf f:\Qt\2010.01\qt\mkspecs\features\win32\thread.prf f:\Qt\2010.01\qt\mkspecs\features\moc.prf f:\Qt\2010.01\qt\mkspecs\features\resources.prf f:\Qt\2010.01\qt\mkspecs\features\uic.prf f:\Qt\2010.01\qt\mkspecs\features\yacc.prf f:\Qt\2010.01\qt\mkspecs\features\lex.prf f:\Qt\2010.01\qt\mkspecs\features\include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\main.o release\SqliteModel.o release\sqlite3.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 



####### Compile

release/main.o: main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/SqliteModel.o: ../model/SqliteModel.cpp ../model/SqliteModel.h \
		../model/Model.h \
		../model/sqlite3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\SqliteModel.o ..\model\SqliteModel.cpp

release/sqlite3.o: ../model/sqlite3.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o release\sqlite3.o ..\model\sqlite3.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

